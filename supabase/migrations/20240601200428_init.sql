-- USERS
create table public.users (
  id uuid not null references auth.users on delete cascade,
  email text not null,
  username text not null,
  first_name text,
  last_name text,
  primary key (id)
);
comment on table public.users is 'Profile data for each user.';

-- URL
create table public.shortened_urls (
  id bigint generated by default as identity primary key,
  title text,
  url text not null,
  hash text unique not null,
  clicks int not null default 0,
  user_id uuid not null references public.users on delete cascade
);
comment on table public.shortened_urls is 'Shortned urls.';

-- inserts a row into public.profiles
create function public.handle_new_user()
returns trigger
language plpgsql
security definer set search_path = ''
as $$
begin
  insert into public.users (id, email, username)
  values (new.id, new.email, new.raw_user_meta_data ->> 'username');
  return new;
end;
$$;

-- trigger the function every time a user is created
create trigger on_auth_user_created
after insert on auth.users
for each row execute function public.handle_new_user();

-- RLS
alter table public.users enable row level security;
create policy "Allow logged-in read access" on public.users for select using ( auth.role() = 'authenticated' );
create policy "Allow individual insert access" on public.users for insert with check ( auth.uid() = id );
create policy "Allow individual update access" on public.users for update using ( auth.uid() = id );

alter table public.shortened_urls enable row level security;
create policy "Allow select" on public.shortened_urls for select using (true);
create policy "Allow insert only for owner or roles with permission" on public.shortened_urls for insert with check ( auth.uid() = user_id );
create policy "Allow update only for owner or roles with permission" on public.shortened_urls for update using ( auth.uid() = user_id );
create policy "Allow delete only for owner or roles with permission" on public.shortened_urls for delete using ( auth.uid() = user_id );